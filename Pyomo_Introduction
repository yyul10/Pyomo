{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Homework1,2.ipynb","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"}},"cells":[{"metadata":{"colab_type":"text","id":"Yr-7ChLRCTGX"},"cell_type":"markdown","source":["## <center>Homework 1 -- Jae Yul Woo (7466-8871-96)</center> "]},{"metadata":{"colab_type":"text","id":"mPKQ4UdCCSGx"},"cell_type":"markdown","source":["### Problem (a) ###"]},{"metadata":{"colab_type":"code","executionInfo":{"elapsed":431,"status":"ok","timestamp":1548379375094,"user":{"displayName":"Yul W","photoUrl":"https://lh3.googleusercontent.com/-E4TCWR8Mi3U/AAAAAAAAAAI/AAAAAAAAZKg/J3tmOogRbwE/s64/photo.jpg","userId":"17622316229640711883"},"user_tz":480},"id":"HuT-c4vO3yaD","outputId":"7cd0158e-db1b-42d1-e480-622828fece62","colab":{"base_uri":"https://localhost:8080/","height":170}},"cell_type":"code","source":["import numpy as np\n","from scipy.optimize import linprog\n","\n","# Given matrices\n","s = np.array([0,0,0,0,0,0,0,0,0,1,1,1])\n","d = np.array([[0,0,0,1,1,0,0,0,0,1,0,0], \n","              [0,0,0,0,0,1,1,0,0,0,1,0],\n","              [0,0,0,0,0,0,0,1,1,0,0,1]])\n","c = np.array([[-1,0,0,1,0,0,1,0,1,0,0,0], \n","              [0,-1,0,0,1,1,0,0,1,0,0,0], \n","              [0,0,-1,0,1,0,1,1,0,0,0,0], \n","              [1,1,4,0,0,0,0,0,0,0,0,0]])\n","db = np.array([2.05,2.05,1.5])\n","cb = np.array([0,0,0,10])\n","\n","print(s)\n","print(d)\n","print(c)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[0 0 0 0 0 0 0 0 0 1 1 1]\n","[[0 0 0 1 1 0 0 0 0 1 0 0]\n"," [0 0 0 0 0 1 1 0 0 0 1 0]\n"," [0 0 0 0 0 0 0 1 1 0 0 1]]\n","[[-1  0  0  1  0  0  1  0  1  0  0  0]\n"," [ 0 -1  0  0  1  1  0  0  1  0  0  0]\n"," [ 0  0 -1  0  1  0  1  1  0  0  0  0]\n"," [ 1  1  4  0  0  0  0  0  0  0  0  0]]\n"],"name":"stdout"}]},{"metadata":{"colab_type":"code","executionInfo":{"elapsed":397,"status":"ok","timestamp":1548380276417,"user":{"displayName":"Yul W","photoUrl":"https://lh3.googleusercontent.com/-E4TCWR8Mi3U/AAAAAAAAAAI/AAAAAAAAZKg/J3tmOogRbwE/s64/photo.jpg","userId":"17622316229640711883"},"user_tz":480},"id":"ef3HOOfcVJr9","outputId":"5752febd-d6ea-4785-a10f-a06692789d16","colab":{"base_uri":"https://localhost:8080/","height":68}},"cell_type":"code","source":["res = linprog(s, A_eq=d, b_eq=db, A_ub=c, b_ub=cb,\n","              options={\"disp\": True,'tol': 0.001},method = 'simplex')\n","print(res.x)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Optimization terminated successfully.\n","         Current function value: -0.000000   \n","         Iterations: 8\n","[2.1  2.1  1.45 2.05 0.   2.05 0.   1.45 0.05 0.   0.   0.  ]\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"wbHOaREEl2rb"},"cell_type":"markdown","source":["### Problem (b) ###"]},{"metadata":{"colab_type":"code","id":"xtbdIc4McUOv","outputId":"e30f9327-99cf-4f3f-aa5f-a2e7c348e0ca","colab":{}},"cell_type":"code","source":["#!pip install pyomo\n","# from pyutilib.services import register_executable, registered_executable\n","# register_executable(name='glpsol')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Collecting pyomo\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/e4/df/3f4a54d494d429102c035308168bfd71aa0fac31832385ab356cb44560df/Pyomo-5.6.1-py3-none-any.whl (2.1MB)\n","\u001b[K    100% |████████████████████████████████| 2.1MB 7.6MB/s eta 0:00:01  5% |█▉                              | 122kB 1.8MB/s eta 0:00:02\n","\u001b[?25hCollecting appdirs (from pyomo)\n","  Downloading https://files.pythonhosted.org/packages/56/eb/810e700ed1349edde4cbdc1b2a21e28cdf115f9faf263f6bbf8447c1abf3/appdirs-1.4.3-py2.py3-none-any.whl\n","Collecting PyUtilib>=5.6.5 (from pyomo)\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/43/04/9174c992ab7b5d5c9c29c0dce3ffbe2440dcfaf054a83b536f8253ce8384/PyUtilib-5.6.5-py2.py3-none-any.whl (250kB)\n","\u001b[K    100% |████████████████████████████████| 256kB 4.2MB/s ta 0:00:011\n","\u001b[?25hRequirement already satisfied: ply in /anaconda3/lib/python3.6/site-packages (from pyomo) (3.11)\n","Requirement already satisfied: six>=1.4 in /anaconda3/lib/python3.6/site-packages (from pyomo) (1.11.0)\n","Requirement already satisfied: nose in /anaconda3/lib/python3.6/site-packages (from PyUtilib>=5.6.5->pyomo) (1.3.7)\n","Installing collected packages: appdirs, PyUtilib, pyomo\n","Successfully installed PyUtilib-5.6.5 appdirs-1.4.3 pyomo-5.6.1\n"],"name":"stdout"}]},{"metadata":{"colab_type":"code","id":"PRCI0NIw2BkA","colab":{}},"cell_type":"code","source":["%%capture\n","!pip install -q pyomo\n","!apt-get install -y -qq glpk-utils"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"code","id":"Xs6m9iN1o0eg","colab":{}},"cell_type":"code","source":["from pyomo.environ import *\n","from pyomo.opt import SolverFactory\n","model = ConcreteModel()\n","\n","X = ['x1','x2','x3']; F = ['f11','f12','f21','f22','f31','f32']; S = ['s1','s2','s3']\n","\n","model.x = Var(X,within=NonNegativeReals)\n","model.f = Var(F,within=NonNegativeReals)\n","model.s = Var(S,within=NonNegativeReals)\n","\n","model.obj = Objective(expr=model.s['s1']+model.s['s2']+model.s['s3'], sense=minimize)"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"code","id":"hi6SXOZyJFsc","colab":{}},"cell_type":"code","source":["model.d1 = Constraint(expr=model.f['f11']+model.f[\"f12\"]+model.s['s1'] == 2.05)\n","model.d2 = Constraint(expr=model.f['f21']+model.f[\"f22\"]+model.s['s2'] == 2.05)\n","model.d3 = Constraint(expr=model.f['f31']+model.f[\"f32\"]+model.s['s3'] == 1.5)\n","model.c1 = Constraint(expr=-model.x['x1']+model.f[\"f11\"]+model.f[\"f22\"]+model.f['f32'] <= 0)\n","model.c2 = Constraint(expr=-model.x['x2']+model.f[\"f12\"]+model.f[\"f21\"]+model.f['f32'] <= 0)\n","model.c3 = Constraint(expr=-model.x['x3']+model.f[\"f12\"]+model.f[\"f22\"]+model.f['f31'] <= 0)\n","model.budget = Constraint(expr=model.x['x1']+model.x['x2']+4*model.x['x3'] <= 10)"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"code","executionInfo":{"elapsed":1099,"status":"ok","timestamp":1548891368883,"user":{"displayName":"Yul W","photoUrl":"https://lh3.googleusercontent.com/-E4TCWR8Mi3U/AAAAAAAAAAI/AAAAAAAAZKg/J3tmOogRbwE/s64/photo.jpg","userId":"17622316229640711883"},"user_tz":480},"id":"3Re_2skh8pYP","outputId":"7c9ce86d-23cb-44a9-cf34-26a2c07660d3","colab":{"base_uri":"https://localhost:8080/","height":323}},"cell_type":"code","source":["opt = SolverFactory(\"glpk\")\n","results = opt.solve(model)\n","\n","print('Objective Value')\n","print(str(value(model.obj))+'\\n')\n","for v in model.component_objects(Var, active=True):\n","    print (\"Variable component object\",v)\n","    for index in v:\n","        print (\"   \", index, v[index].value)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Objective Value\n","0.0\n","\n","Variable component object x\n","    x1 2.1\n","    x3 1.45\n","    x2 2.1\n","Variable component object f\n","    f11 2.05\n","    f32 0.0499999999999998\n","    f21 2.05\n","    f22 0.0\n","    f31 1.45\n","    f12 0.0\n","Variable component object s\n","    s1 0.0\n","    s2 0.0\n","    s3 0.0\n"],"name":"stdout"}]},{"metadata":{"colab_type":"text","id":"MdCuI6va0MGX"},"cell_type":"markdown","source":["## <center>Homework 2 -- Jae Yul Woo (7466-8871-96)</center> "]},{"metadata":{"colab_type":"text","id":"_Vkn7RWC0MGX"},"cell_type":"markdown","source":["### Problem (c) ###"]},{"metadata":{"colab_type":"code","executionInfo":{"elapsed":15143,"status":"ok","timestamp":1549048718485,"user":{"displayName":"Yul W","photoUrl":"https://lh3.googleusercontent.com/-E4TCWR8Mi3U/AAAAAAAAAAI/AAAAAAAAZKg/J3tmOogRbwE/s64/photo.jpg","userId":"17622316229640711883"},"user_tz":480},"id":"tr9a6Q5l38uD","outputId":"6b381942-7908-448c-83dc-6a1c3947e55b","colab":{"base_uri":"https://localhost:8080/","height":394}},"cell_type":"code","source":["!pip install pyomo\n","!pip install PySP"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Collecting pyomo\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/e4/df/3f4a54d494d429102c035308168bfd71aa0fac31832385ab356cb44560df/Pyomo-5.6.1-py3-none-any.whl (2.1MB)\n","\u001b[K    100% |████████████████████████████████| 2.1MB 7.8MB/s \n","\u001b[?25hRequirement already satisfied: six>=1.4 in /usr/local/lib/python3.6/dist-packages (from pyomo) (1.11.0)\n","Collecting ply (from pyomo)\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/a3/58/35da89ee790598a0700ea49b2a66594140f44dec458c07e8e3d4979137fc/ply-3.11-py2.py3-none-any.whl (49kB)\n","\u001b[K    100% |████████████████████████████████| 51kB 18.9MB/s \n","\u001b[?25hCollecting PyUtilib>=5.6.5 (from pyomo)\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/43/04/9174c992ab7b5d5c9c29c0dce3ffbe2440dcfaf054a83b536f8253ce8384/PyUtilib-5.6.5-py2.py3-none-any.whl (250kB)\n","\u001b[K    100% |████████████████████████████████| 256kB 18.0MB/s \n","\u001b[?25hCollecting appdirs (from pyomo)\n","  Downloading https://files.pythonhosted.org/packages/56/eb/810e700ed1349edde4cbdc1b2a21e28cdf115f9faf263f6bbf8447c1abf3/appdirs-1.4.3-py2.py3-none-any.whl\n","Requirement already satisfied: nose in /usr/local/lib/python3.6/dist-packages (from PyUtilib>=5.6.5->pyomo) (1.3.7)\n","Installing collected packages: ply, PyUtilib, appdirs, pyomo\n","Successfully installed PyUtilib-5.6.5 appdirs-1.4.3 ply-3.11 pyomo-5.6.1\n","Collecting PySP\n","  Downloading https://files.pythonhosted.org/packages/00/c6/dde4f824101012c4c180ab68aefb4696b4b9fc4d64f4bc12e34ece571116/pysp-0.0.2-py3-none-any.whl\n","Requirement already satisfied: PyYAML>=3.12 in /usr/local/lib/python3.6/dist-packages (from PySP) (3.13)\n","Requirement already satisfied: SQLAlchemy>=1.2.14 in /usr/local/lib/python3.6/dist-packages (from PySP) (1.2.17)\n","Installing collected packages: PySP\n","Successfully installed PySP-0.0.2\n"],"name":"stdout"}]},{"metadata":{"colab_type":"code","id":"OdyDmJ4rpTGS","colab":{}},"cell_type":"code","source":["import itertools\n","from pyomo.environ import *\n","from pyomo.core import *\n","from pyomo.pysp.annotations import (PySP_ConstraintStageAnnotation,StochasticConstraintBodyAnnotation)"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"code","id":"7fupYtRFpYpM","colab":{}},"cell_type":"code","source":["theta1_table = [1,1,1,1,1,1,1,0,0,0]\n","theta2_table = [1,1,1,1,1,1,1,0,0,0]\n","\n","model = ConcreteModel()\n","model.constraint_stage = PySP_ConstraintStageAnnotation()\n","model.stoch_matrix = StochasticConstraintBodyAnnotation()\n","num_scenarios = len(theta1_table)*len(theta2_table)\n","scenario_data = dict(('Scenario'+str(i), (theta1val, theta2val))\n","                     for i, (theta1val, theta2val) in\n","                     enumerate (itertools.product(theta1_table, theta2_table),1))\n","\n","model.x1 = Var(within=NonNegativeReals)\n","model.x2 = Var(within=NonNegativeReals)\n","model.x3 = Var(within=NonNegativeReals)\n","model.f11 = Var(within=NonNegativeReals)\n","model.f12 = Var(within=NonNegativeReals)\n","model.f21 = Var(within=NonNegativeReals)\n","model.f22 = Var(within=NonNegativeReals)\n","model.f31 = Var(within=NonNegativeReals)\n","model.f32 = Var(within=NonNegativeReals)\n","model.s1 = Var(within=NonNegativeReals)\n","model.s2 = Var(within=NonNegativeReals)\n","model.s3 = Var(within=NonNegativeReals)\n","model.theta1 = Param(mutable=True, initialize=0)\n","model.theta2 = Param(mutable=True, initialize=0)"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"code","id":"2CCJj1Yopgae","colab":{}},"cell_type":"code","source":["model.FirstStageCost = Expression(initialize=0)\n","model.SecondStageCost = Expression(initialize=model.s1+model.s2+model.s3)\n","\n","model.budget = Constraint(expr=model.x1+model.x2+4*model.x3 <= 10)\n","model.constraint_stage.declare(model.budget,1)\n","\n","model.d1 = Constraint(expr=model.f11+model.f12+model.s1 == 2.05)\n","model.constraint_stage.declare(model.d1,2)\n","\n","model.d2 = Constraint(expr=model.f21+model.f22+model.s2 == 2.05)\n","model.constraint_stage.declare(model.d2,2)\n","\n","model.d3 = Constraint(expr=model.f31+model.f32+model.s3 == 1.5)\n","model.constraint_stage.declare(model.d3,2)\n","\n","model.c1 = Constraint(expr=model.f11+model.f22+model.f32-model.theta1*model.x1 <= 0)\n","model.constraint_stage.declare(model.c1,2)\n","model.stoch_matrix.declare(model.c1, variables=[model.x1])\n","\n","model.c2 = Constraint(expr=model.f12+model.f21+model.f32-model.theta2*model.x2 <= 0)\n","model.constraint_stage.declare(model.c2,2)\n","model.stoch_matrix.declare(model.c2, variables=[model.x2])                                                \n","\n","model.c3 = Constraint(expr=model.f12+model.f22+model.f31-model.x3 <= 0)\n","model.constraint_stage.declare(model.c3,2)\n","\n","model.obj = Objective(expr=model.FirstStageCost+model.SecondStageCost)"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"code","id":"0kpj--4HprYV","colab":{}},"cell_type":"code","source":["def pysp_scenario_tree_model_callback():\n","    from pyomo.pysp.scenariotree.tree_structure_model import \\\n","        CreateConcreteTwoStageScenarioTreeModel\n","\n","    st_model = CreateConcreteTwoStageScenarioTreeModel(num_scenarios)\n","\n","    first_stage = st_model.Stages.first()\n","    second_stage = st_model.Stages.last()\n","\n","    # First Stage\n","    st_model.StageCost[first_stage] = 'FirstStageCost'\n","    st_model.StageVariables[first_stage].add('x1')\n","    st_model.StageVariables[first_stage].add('x2')\n","    st_model.StageVariables[first_stage].add('x3')\n","    \n","    # Second Stage\n","    st_model.StageCost[second_stage] = 'SecondStageCost'\n","    st_model.StageVariables[second_stage].add('f11')\n","    st_model.StageVariables[second_stage].add('f12')\n","    st_model.StageVariables[second_stage].add('f21')\n","    st_model.StageVariables[second_stage].add('f22')\n","    st_model.StageVariables[second_stage].add('f31')\n","    st_model.StageVariables[second_stage].add('f32')\n","    st_model.StageVariables[second_stage].add('s1')\n","    st_model.StageVariables[second_stage].add('s2')\n","    st_model.StageVariables[second_stage].add('s3')\n","    return st_model\n","\n","def pysp_instance_creation_callback(scenario_name, node_names):\n","\n","    #\n","    # Clone a new instance and update the stochastic\n","    # parameters from the sampled scenario\n","    #\n","\n","    instance = model.clone()\n","\n","    theta1_val, theta2_val= scenario_data[scenario_name]\n","    instance.theta1.value = theta1_val\n","    instance.theta2.value = theta2_val\n","\n","    return instance"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"code","id":"nWFDJ6pmpyiK","colab":{}},"cell_type":"code","source":["! python -m pyomo.pysp.convert.smps -m network.py --basename network \\--output-directory /Users/yul/Desktop/network --symbolic-solver-labels"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"text","id":"Y91XENDFBHwJ"},"cell_type":"markdown","source":["### Problem (d),(e) ###"]},{"metadata":{"colab_type":"code","id":"VNqvSyCtWOU5","colab":{}},"cell_type":"code","source":["import itertools\n","from pyomo.environ import *\n","from pyomo.core import *\n","from pyomo.pysp.annotations import (PySP_ConstraintStageAnnotation, StochasticConstraintBoundsAnnotation, StochasticConstraintBodyAnnotation)"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"code","executionInfo":{"elapsed":560,"status":"ok","timestamp":1549067749738,"user":{"displayName":"Yul W","photoUrl":"https://lh3.googleusercontent.com/-E4TCWR8Mi3U/AAAAAAAAAAI/AAAAAAAAZKg/J3tmOogRbwE/s64/photo.jpg","userId":"17622316229640711883"},"user_tz":480},"id":"PmPjvA47KqHF","outputId":"d851378a-815e-4eeb-ca5d-d2a1d9768937","colab":{"base_uri":"https://localhost:8080/","height":68}},"cell_type":"code","source":["theta1_table = [1,1,1,1,1,1,1,0,0,0]\n","theta2_table = [1,1,1,1,1,1,1,0,0,0]\n","d1_rhs_table = [0,1,2,3,5]\n","d2_rhs_table = [0,1,2,3,5]\n","d3_rhs_table = [0,1,2,3]\n","\n","model = ConcreteModel()\n","# model.constraint_stage = PySP_ConstraintStageAnnotation()\n","# model.stoch_matrix = StochasticConstraintBodyAnnotation()\n","# num_scenarios = len(theta1_table)*len(theta2_table)\n","# scenario_data = dict(('Scenario'+str(i), (theta1val, theta2val))\n","#                      for i, (theta1val, theta2val) in\n","#                      enumerate (itertools.product(theta1_table, theta2_table),1))\n","#-------E--------\n","model.constraint_stage = PySP_ConstraintStageAnnotation()\n","model.stoch_rhs = StochasticConstraintBoundsAnnotation()\n","model.stoch_matrix = StochasticConstraintBodyAnnotation()\n","num_scenarios = len(theta1_table)*len(theta2_table)*len(d1_rhs_table) * len(d2_rhs_table) * len(d3_rhs_table)\n","scenario_data = dict(('Scenario'+str(i), (theta1val, theta2val, d1_rhs_val, d2_rhs_val, d3_rhs_val))\n","                     for i, (theta1val, theta2val, d1_rhs_val, d2_rhs_val, d3_rhs_val) in\n","                     enumerate (itertools.product(theta1_table, theta2_table, d1_rhs_table, d2_rhs_table, d3_rhs_table),1))\n","#----------------\n","model.d1_rhs = Param(mutable=True, initialize=0.0)\n","model.d2_rhs = Param(mutable=True, initialize=0.0)\n","model.d3_rhs = Param(mutable=True, initialize=0.0)\n","\n","model.x1 = Var(within=NonNegativeReals)\n","model.x2 = Var(within=NonNegativeReals)\n","model.x3 = Var(within=NonNegativeReals)\n","model.f11 = Var(within=NonNegativeReals)\n","model.f12 = Var(within=NonNegativeReals)\n","model.f21 = Var(within=NonNegativeReals)\n","model.f22 = Var(within=NonNegativeReals)\n","model.f31 = Var(within=NonNegativeReals)\n","model.f32 = Var(within=NonNegativeReals)\n","model.s1 = Var(within=NonNegativeReals)\n","model.s2 = Var(within=NonNegativeReals)\n","model.s3 = Var(within=NonNegativeReals)\n","model.theta1 = Param(mutable=True, initialize=0)\n","model.theta2 = Param(mutable=True, initialize=0)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["WARNING: DEPRECATED: 'PySP_ConstraintStageAnnotation' is no longer recognized\n","    (constraint stages are automatically inferred). It will be removed in the\n","    future. Please update your model file.\n"],"name":"stdout"}]},{"metadata":{"colab_type":"code","id":"OUuaXaF0KqHJ","colab":{}},"cell_type":"code","source":["model.FirstStageCost = Expression(initialize=0)\n","model.SecondStageCost = Expression(initialize=model.s1+model.s2+model.s3)\n","\n","model.budget = Constraint(expr=model.x1+model.x2+4*model.x3 <= 10)\n","model.constraint_stage.declare(model.budget,1)\n","\n","# model.d1 = Constraint(expr=model.f11+model.f12+model.s1 == 2.05)\n","# model.constraint_stage.declare(model.d1,2)\n","\n","# model.d2 = Constraint(expr=model.f21+model.f22+model.s2 == 2.05)\n","# model.constraint_stage.declare(model.d2,2)\n","\n","# model.d3 = Constraint(expr=model.f31+model.f32+model.s3 == 1.5)\n","# model.constraint_stage.declare(model.d3,2)\n","\n","#-------E--------\n","model.d1 = Constraint(expr=model.f11+model.f12+model.s1 == model.d1_rhs)\n","model.constraint_stage.declare(model.d1,2)\n","model.stoch_rhs.declare(model.d1)\n","\n","model.d2 = Constraint(expr=model.f21+model.f22+model.s2 == model.d2_rhs)\n","model.constraint_stage.declare(model.d2,2)\n","model.stoch_rhs.declare(model.d2)\n","\n","model.d3 = Constraint(expr=model.f31+model.f32+model.s3 == model.d3_rhs)\n","model.constraint_stage.declare(model.d3,2)\n","model.stoch_rhs.declare(model.d3)\n","#----------------\n","model.c1 = Constraint(expr=model.f11+model.f22+model.f32-model.theta1*model.x1 <= 0)\n","model.constraint_stage.declare(model.c1,2)\n","model.stoch_matrix.declare(model.c1, variables=[model.x1])\n","\n","model.c2 = Constraint(expr=model.f12+model.f21+model.f32-model.theta2*model.x2 <= 0)\n","model.constraint_stage.declare(model.c2,2)\n","model.stoch_matrix.declare(model.c2, variables=[model.x2])                                                \n","\n","model.c3 = Constraint(expr=model.f12+model.f22+model.f31-model.x3 <= 0)\n","model.constraint_stage.declare(model.c3,2)\n","\n","model.obj = Objective(expr=model.FirstStageCost+model.SecondStageCost)"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"code","id":"hPLvACmWKqHN","colab":{}},"cell_type":"code","source":["def pysp_scenario_tree_model_callback():\n","    from pyomo.pysp.scenariotree.tree_structure_model import \\\n","        CreateConcreteTwoStageScenarioTreeModel\n","\n","    st_model = CreateConcreteTwoStageScenarioTreeModel(num_scenarios)\n","\n","    first_stage = st_model.Stages.first()\n","    second_stage = st_model.Stages.last()\n","\n","    # First Stage\n","    st_model.StageCost[first_stage] = 'FirstStageCost'\n","    st_model.StageVariables[first_stage].add('x1')\n","    st_model.StageVariables[first_stage].add('x2')\n","    st_model.StageVariables[first_stage].add('x3')\n","    \n","    # Second Stage\n","    st_model.StageCost[second_stage] = 'SecondStageCost'\n","    st_model.StageVariables[second_stage].add('f11')\n","    st_model.StageVariables[second_stage].add('f12')\n","    st_model.StageVariables[second_stage].add('f21')\n","    st_model.StageVariables[second_stage].add('f22')\n","    st_model.StageVariables[second_stage].add('f31')\n","    st_model.StageVariables[second_stage].add('f32')\n","    st_model.StageVariables[second_stage].add('s1')\n","    st_model.StageVariables[second_stage].add('s2')\n","    st_model.StageVariables[second_stage].add('s3')\n","    # st_model.StageVariables[second_stage].add('d1_rhs')\n","    # st_model.StageVariables[second_stage].add('d2_rhs')\n","    # st_model.StageVariables[second_stage].add('d3_rhs')\n","    return st_model\n","\n","def pysp_instance_creation_callback(scenario_name, node_names):\n","\n","    #\n","    # Clone a new instance and update the stochastic\n","    # parameters from the sampled scenario\n","    #\n","\n","    instance = model.clone()\n","\n","    theta1_val, theta2_val, d1_rhs_val, d2_rhs_val, d3_rhs_val = scenario_data[scenario_name]\n","    instance.theta1.value = theta1_val\n","    instance.theta2.value = theta2_val\n","    instance.d1_rhs.value = d1_rhs_val\n","    instance.d2_rhs.value = d2_rhs_val\n","    instance.d3_rhs.value = d3_rhs_val\n","    return instance"],"execution_count":0,"outputs":[]},{"metadata":{"colab_type":"code","executionInfo":{"elapsed":4895,"status":"ok","timestamp":1549067836369,"user":{"displayName":"Yul W","photoUrl":"https://lh3.googleusercontent.com/-E4TCWR8Mi3U/AAAAAAAAAAI/AAAAAAAAZKg/J3tmOogRbwE/s64/photo.jpg","userId":"17622316229640711883"},"user_tz":480},"id":"yFDV0lM0gz1g","outputId":"03304dfc-f9e8-42c7-c695-f9601e737dca","colab":{"base_uri":"https://localhost:8080/","height":173}},"cell_type":"code","source":["! python -m pyomo.pysp.convert.smps -m network.py --basename network \\--output-directory /Users/yul/Desktop/network --symbolic-solver-labels"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/lib/python3.6/runpy.py:125: RuntimeWarning: 'pyomo.pysp.convert.smps' found in sys.modules after import of package 'pyomo.pysp.convert', but prior to execution of 'pyomo.pysp.convert.smps'; this may result in unpredictable behaviour\n","  warn(RuntimeWarning(msg))\n","ERROR: Failed to extract reference model python file from path specification:\n","    network.py\n","pyomo.pysp.convert.smps: IO ERROR:\n","path does not exist: /content/network.py\n","\n","To obtain further information regarding the source of the exception, use the --traceback option\n"],"name":"stdout"}]}]}